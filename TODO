A location for general notes
============================

* Really should have a way to decouple the url generation from the
  Server class and the views themselves.  Probably want something like
  a method that takes a model object, and view class and generates an URL.

* Add a nice error page instead of the twisted.web error page.

* Add in a file id for text editing so we can track edits during page moves

* Add in the ability to move pages

* Add markdown and textile formatters

* Lock pages as read-only (see also merging)
  Is this really locked, or is it a restricted ACL?

* ACLs for editing (see also merging)

* Define formatter in the first line of wiki text
  # <format> <reserved for later use - like acls or locking>

* AJAX editing of source files (avoid page refreshes)

* Add a better page for attempting to list a missing directory



Standalone requirements
-----------------------

* Sessions

* Login and logout

* SQLite storage engine for usernames and passwords?

* Subscriptions?

* Generate a nonce for new users, and validate email addresses
  (hmm... requires incoming email processing, not that easy for standalone
  deployments, and not needed for launchpad integration)


Launchpad integration
---------------------

* A plan for spam!  Really needed as we have spammers

* How to handle merges
  Page merge hooks?



Ideas not yet fully formed
--------------------------

* Lazy loading of formatters (to reduce install dependancies)

* Customize default rendering engine

* Extend creole to allow specifying format of embedded code

* Look for a wiki-media python library for formatting wiki-media text
  Or write one.

* Soundex filename search based on base_name of the files, used when
  hitting a missing file to offer suggestions.
